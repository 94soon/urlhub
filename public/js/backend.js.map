{"version":3,"sources":["webpack:///./resources/js/backend.js","webpack:///./resources/js/bootstrap.js"],"names":["$","document","ready","ajaxSetup","headers","attr","DataTable","processing","serverSide","stateSave","ajax","columns","data","name","searchable","type","render","_","sort","language","search","searchPlaceholder","order","draw","ClipboardJS","require","on","e","trigger","tooltip","library","add","fab","far","fas","dom","watch","window","jQuery","selector"],"mappings":"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","file":"/js/backend.js","sourcesContent":["import './bootstrap';\r\nimport '@coreui/coreui'\r\n\r\n/**\r\n * DataTables\r\n * https://datatables.net/\r\n */\r\nimport 'datatables.net';\r\n$(document).ready(function() {\r\n    $.ajaxSetup({\r\n        headers: {\r\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\r\n        }\r\n    });\r\n\r\n    $('#dt-allUrls').DataTable( {\r\n        processing: true,\r\n        serverSide: true,\r\n        stateSave: true,\r\n        ajax: '/admin/allurl/getdata',\r\n        columns: [\r\n            {data: 'url_key'},\r\n            {data: 'long_url', name: 'meta_title'},\r\n            {data: 'clicks', searchable: false,},\r\n            {data: 'created_by'},\r\n            {\r\n                data: 'created_at',\r\n                type: 'num',\r\n                render: {\r\n                    _: 'display',\r\n                    sort: 'timestamp'\r\n                },\r\n                searchable: false\r\n            },\r\n            {data: 'action'}\r\n        ],\r\n        language: {\r\n            search: \"_INPUT_\",\r\n            searchPlaceholder: \"Search...\"\r\n        }\r\n    }).order([4, 'desc']).draw();\r\n\r\n    $('#dt-myUrls').DataTable({\r\n        processing: true,\r\n        serverSide: true,\r\n        stateSave: true,\r\n        ajax: '/admin/myurl/getdata',\r\n        columns: [\r\n            {data: 'url_key'},\r\n            {data: 'long_url', name: 'meta_title'},\r\n            {data: 'clicks', searchable: false},\r\n            {\r\n                data: 'created_at',\r\n                type: 'num',\r\n                render: {\r\n                    _: 'display',\r\n                    sort: 'timestamp'\r\n                },\r\n                searchable: false\r\n            },\r\n            {data: 'action'}\r\n        ],\r\n        language: {\r\n            search: \"_INPUT_\",\r\n            searchPlaceholder: \"Search...\"\r\n        }\r\n    }).order([3, 'desc']).draw();\r\n\r\n    $('#dt-Users').DataTable({\r\n        processing: true,\r\n        serverSide: true,\r\n        stateSave: true,\r\n        ajax: '/admin/user/user/getdata',\r\n        columns: [\r\n            {data: 'name'},\r\n            {data: 'email'},\r\n            {\r\n                data: 'created_at',\r\n                type: 'num',\r\n                render: {\r\n                    _: 'display',\r\n                    sort: 'timestamp'\r\n                }\r\n            },\r\n            {\r\n                data: 'updated_at',\r\n                type: 'num',\r\n                render: {\r\n                    _: 'display',\r\n                    sort: 'timestamp'\r\n                },\r\n                searchable: false,\r\n            },\r\n            {data: 'action'}\r\n        ],\r\n        language: {\r\n            search: \"_INPUT_\",\r\n            searchPlaceholder: \"Search...\"\r\n        }\r\n    }).order([2, 'desc']).draw();\r\n});\r\n\r\n\r\n/**\r\n * Copy short url to clipboard\r\n */\r\n// https://github.com/zenorocha/clipboard.js\r\nvar ClipboardJS = require('clipboard');\r\n\r\nnew ClipboardJS('[data-clipboard-text]').on('success', function(e) {\r\n    $(e.trigger)\r\n        .attr('data-original-title','Copied!').tooltip(\"_fixTitle\").tooltip(\"show\")\r\n        .attr(\"title\", \"Copy to clipboard\").tooltip(\"_fixTitle\");\r\n});\r\n","/**\n * This bootstrap file is used for both frontend and backend\n */\n\n// import _ from 'lodash'\n// import axios from 'axios'\nimport $ from 'jquery';\nimport 'popper.js'; // Required for BS4\nimport 'bootstrap';\n\n\n/**\n * Font Awesome >=5.1\n *\n * Is recommended import just the icons that you use, for decrease considerably the file size.\n * You can see at next link, how it works: https://github.com/FortAwesome/Font-Awesome/blob/master/UPGRADING.md#no-more-default-imports\n * Also you can import the icons separately on the frontend and backend\n */\n\nimport { library, dom } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(fab, far, fas);\n\n// Kicks off the process of finding <i> tags and replacing with <svg>\ndom.watch();\n\n\n\n/**\n * We'll load jQuery and the Bootstrap jQuery plugin which provides support\n * for JavaScript based Bootstrap features such as modals and tabs. This\n * code may be modified to fit the specific needs of your application.\n */\n\nwindow.$ = window.jQuery = $;\n// window._ = _; // Lodash\n\n\n\n/**\n * Bootstrap tooltips\n * https://getbootstrap.com/docs/4.1/components/tooltips/\n */\n$(\"body\").tooltip({\n    selector: '[data-toggle=\"tooltip\"]'\n});\n\n\n\n// /**\n//  * We'll load the axios HTTP library which allows us to easily issue requests\n//  * to our Laravel back-end. This library automatically handles sending the\n//  * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n//  */\n//\n// window.axios = axios;\n// window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n// /**\n//  * Next we will register the CSRF Token as a common header with Axios so that\n//  * all outgoing HTTP requests automatically have it attached. This is just\n//  * a simple convenience so we don't have to attach every token manually.\n//  */\n//\n// const token = document.head.querySelector('meta[name=\"csrf-token\"]');\n//\n// if (token) {\n//     window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;\n// } else {\n//     console.error('CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token');\n// }\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo'\n\n// window.Pusher = require('pusher-js');\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: process.env.MIX_PUSHER_APP_KEY\n//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n//     encrypted: true\n// });\n"],"sourceRoot":""}